<#@ template language="C#" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
using System;
using System.Collections;
using System.Collections.Generic;
using Gtk;
using UI = Gtk.Builder.ObjectAttribute;
namespace <#=ProjectName#><#
   if (SubNameSpace != "")
   {
#>.<#= SubNameSpace #> <#
   }
#>
{

    public class cls<#=TreeViewName#>{

        [UI] private readonly Gtk.TreeView <#=TreeViewName#> = null;
        Gtk.ListStore <#=ListStoreName#> = new Gtk.ListStore (typeof (<#=ModelName#>));

        private void _mkTreeView_<#=ModelName#>()
        {  
<#
foreach (columnModel columnModel1 in columnModelArray)
{
    if (columnModel1.effective && columnModel1.typeFix != "bool")
    {
#>

            Gtk.TreeViewColumnEx <#=columnModel1.title#>Column = new Gtk.TreeViewColumnEx ();
            <#=columnModel1.title#>Column.Title = "<#=columnModel1.title#>";
            <#=columnModel1.title#>Column._mkCellRendererText(<#=TreeViewName#> , "",100);
            <#=columnModel1.title#>Column.bindingPropertyName = "<#=columnModel1.title#>";
<#
    }else if (columnModel1.effective && columnModel1.typeFix == "bool"){
#>

	        Gtk.TreeViewColumnExã€€<#=columnModel1.title#>Column = new Gtk.TreeViewColumnEx ();
	        <#=columnModel1.title#>Column.Title = "<#=columnModel1.title#>";
	        <#=columnModel1.title#>Column.bindingPropertyName = "<#=columnModel1.title#>";
	        Gtk.CellRendererToggle <#=columnModel1.title#>ColumnToggle = <#=columnModel1.title#>Column._mkCellRendererToggle(<#=TreeViewName#> ,"",60);
	        <#=columnModel1.title#>ColumnToggle.Toggled += delegate(object o, ToggledArgs args)
	        {
		        TreeIter iter;
		        if (<#=ListStoreName#>.GetIterFromString(out iter, args.Path))
		        {
			       <#=ModelName#> <#=ModelName#>1 = (<#=ModelName#>)<#=ListStoreName#>.GetValue(iter, 0);
			       <#=ModelName#>1.<#=columnModel1.title#> = <#=ModelName#>1.<#=columnModel1.title#> == true ? false : true;
		        }
	        };        
    <#}
}
#>
    }

        private void _mkTreeViewBinding_<#=ModelName#>()
        {

            <#=ListStoreName#> = new Gtk.ListStore (typeof (<#=ModelName#>));

            List<<#=ModelName#>> <#=ModelName#>Array = new List<<#=ModelName#>>();

            <#=ListStoreName#>.Clear();
            <#=TreeViewName#>.Model = null;

            foreach (<#=ModelName#> <#=ModelName#>1 in <#=ModelName#>Array) {
                <#=ListStoreName#>.AppendValues (<#=ModelName#>1);
            }

            <#=TreeViewName#>.Model = <#=ListStoreName#>;

            <#=TreeViewName#>._mkBinding();

        }

    }

}